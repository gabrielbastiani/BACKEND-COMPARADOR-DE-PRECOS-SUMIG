// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// criar uma migration: yarn prisma migrate dev

model User {
  id       String  @id @default(uuid())
  name     String  @db.VarChar(295)
  slug     String? @db.VarChar(295)
  email    String  @unique @db.VarChar(180)
  password String

  created_at DateTime? @default(now()) @db.Timestamptz(3)
  updated_at DateTime? @updatedAt

  @@map("users")
}

model PasswordRecoveryUser {
  id    String @id @default(uuid())
  email String

  @@map("passwordrecoveryusers")
}

model Category {
  id            String         @id @default(uuid())
  name          String?        @unique @db.VarChar(300)
  slug          String?        @db.VarChar(300)
  image         String?
  nivel         Int?
  parentId      String?
  order         Int?
  type_category String?
  status        StatusCategory @default(Disponivel)

  productCategory ProductCategory[]

  created_at DateTime? @default(now()) @db.Timestamptz(3)
  updated_at DateTime? @updatedAt

  @@map("categories")
}

enum StatusCategory {
  Disponivel
  Indisponivel
}

model StoreProduct {
  id                 String  @id @default(uuid())
  type_product       String?
  slug_type          String?
  store              String?
  slug               String?
  link_search        String?
  image              String?
  title_product      String?
  slug_title_product String?
  price              Float?
  brand              String?
  link               String?

  product Product[]
  Filter  Filter[]

  created_at DateTime? @default(now()) @db.Timestamptz(3)
  updated_at DateTime? @updatedAt

  @@map("storeproducts")
}

model Product {
  id                 String        @id @default(uuid())
  storeProduct       StoreProduct? @relation(fields: [storeProduct_id], references: [id])
  storeProduct_id    String?
  store              String?
  slug               String?
  title_product      String?
  slug_title_product String?
  price              Float?

  productCategory ProductCategory[]
  Filter          Filter[]

  created_at DateTime? @default(now()) @db.Timestamptz(3)
  updated_at DateTime? @updatedAt

  @@map("products")
}

model ProductCategory {
  id         String   @id @default(uuid())
  product    Product  @relation(fields: [product_id], references: [id])
  product_id String
  category   Category @relation(fields: [name], references: [name])
  name       String
  slug       String?
  order      Int?

  Filter Filter[]

  created_at DateTime? @default(now()) @db.Timestamptz(3)
  updated_at DateTime? @updatedAt

  @@map("productcategories")
}

enum StatusProductCategory {
  Disponivel
  Indisponivel
}

model Filter {
  id                 String          @id @default(uuid())
  storeProduct       StoreProduct?   @relation(fields: [storeProduct_id], references: [id])
  storeProduct_id    String?
  product            Product         @relation(fields: [product_id], references: [id])
  product_id         String
  productCategory    ProductCategory @relation(fields: [productCategory_id], references: [id])
  productCategory_id String

  created_at DateTime? @default(now()) @db.Timestamptz(3)
  updated_at DateTime? @updatedAt

  @@map("filters")
}
